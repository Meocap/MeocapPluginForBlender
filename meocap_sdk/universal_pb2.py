# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: universal.proto
# Protobuf Python Version: 5.28.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    28,
    2,
    '',
    'universal.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import skeleton_pb2 as skeleton__pb2
from .algebra import f64_pb2 as algebra_dot_f64__pb2
from . import tracker_pb2 as tracker__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0funiversal.proto\x12\tuniversal\x1a\x0eskeleton.proto\x1a\x11\x61lgebra.f64.proto\x1a\rtracker.proto\"\x92\x03\n\x05\x46rame\x12\x10\n\x08\x66rame_id\x18\x0b \x01(\r\x12\x38\n\x13raw_tracker_reports\x18\x0c \x01(\x0b\x32\x1b.tracker.BodyTrackerReports\x12\x15\n\rcontact_lfoot\x18\t \x01(\x01\x12\x15\n\rcontact_rfoot\x18\n \x01(\x01\x12&\n\x0btranslation\x18\x08 \x01(\x0b\x32\x11.algebra.f64.Vec3\x12(\n\x08raw_pose\x18\x05 \x01(\x0b\x32\x16.skeleton.BoneRotation\x12.\n\x0eoptimized_pose\x18\x06 \x01(\x0b\x32\x16.skeleton.BoneRotation\x12,\n\x0cglb_opt_pose\x18\x07 \x01(\x0b\x32\x16.skeleton.BoneRotation\x12/\n\x0fjoint_positions\x18\x01 \x01(\x0b\x32\x16.skeleton.BonePosition\x12.\n\x0ejoint_velocity\x18\x04 \x01(\x0b\x32\x16.skeleton.BonePositionb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'universal_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_FRAME']._serialized_start=81
  _globals['_FRAME']._serialized_end=483
# @@protoc_insertion_point(module_scope)
